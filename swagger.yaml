# TODO : Edit swagger with this tool : https://editor.swagger.io/

swagger: '2.0'
info:
  title: Bank Argent API documentation
  description: Contains all available API endpoints in this codebase
  version: '1.0.0'
  termsOfService: 'http://swagger.io/terms/'
host: localhost:3001
basePath: /api/v1
schemes:
  - http
paths:
  /user/login:
    post:
      tags:
        - User Module
      summary: Login user
      description: Login the user and return the generated JWT token
      parameters:
        - in: body
          name: body
          description: Login Payload
          required: true
          schema:
            $ref: '#/definitions/LoginRequest'
      produces:
        - application/json
      responses:
        '200':
          description: Login Successfully
          schema:
            $ref: '#/definitions/LoginResponse'
        '400':
          description: Invalid Fields
          schema:
            $ref: '#/definitions/ApiResponse'
        '500':
          description: Internal Server Error
          schema:
            $ref: '#/definitions/ApiResponse'
  /user/signup:
    post:
      tags:
        - User Module
      summary: Signup user
      description: Creates an account for the user
      parameters:
        - in: body
          name: body
          description: Signup Payload
          required: true
          schema:
            $ref: '#/definitions/SignupRequest'
      produces:
        - application/json
      responses:
        '200':
          description: Signup Successfully
          schema:
            allOf:
              - $ref: '#/definitions/ApiResponse'
              - type: object
                properties:
                  body:
                    $ref: '#/definitions/Profile'
        '400':
          description: Invalid Fields
          schema:
            $ref: '#/definitions/ApiResponse'
        '500':
          description: Internal Server Error
          schema:
            $ref: '#/definitions/ApiResponse'
  /user/profile:
    post:
      security:
        - Bearer: []
      tags:
        - User Module
      summary: Get User Profile
      description: Fetches loged in user's profile informations
      parameters:
        - in: header
          name: Authorization
          type: string
          description: Attach Bearer JWT token
          required: true
      produces:
        - application/json
      responses:
        '200':
          description: User profile retrieved successully
          schema:
            allOf:
              - $ref: '#/definitions/ApiResponse'
              - type: object
                properties:
                  body:
                    $ref: '#/definitions/Profile'
        '401':
          description: Authentication Error, thrown if invalid or no credentials was used for authentication
          schema:
            $ref: '#/definitions/ApiResponse'
        '500':
          description: Internal Server Error
          schema:
            $ref: '#/definitions/ApiResponse'
    put:
      security:
        - Bearer: []
      tags:
        - User Module
      summary: Edit User Profile
      description: Updates loged in user's profile informations
      parameters:
        - in: header
          type: string
          name: Authorization
          description: Attach Bearer JWT token
          required: true
        - in: body
          name: body
          description: Update user profile attributes
          required: true
          schema:
            $ref: '#/definitions/UserProfileUpdateRequest'
      produces:
        - application/json
      responses:
        '200':
          description: User profile retrieved successully
          schema:
            allOf:
              - $ref: '#/definitions/ApiResponse'
              - type: object
                properties:
                  body:
                    $ref: '#/definitions/Profile'
        '400':
          description: Invalid Fields
          schema:
            $ref: '#/definitions/ApiResponse'
        '401':
          description: Authentication Error, thrown if invalid or no credentials was used for authentication
          schema:
            $ref: '#/definitions/ApiResponse'
        '500':
          description: Internal Server Error
          schema:
            $ref: '#/definitions/ApiResponse'
  /bank-accounts:
    get:
      security:
        - Bearer: []
      tags:
        - Bank Accounts Module
      summary: Get User bank accounts summaries
      description: Fetches logged in user's bank accounts summaries
      parameters:
        - in: header
          name: Authorization
          type: string
          description: Attach Bearer JWT token
          required: true
      produces:
        - application/json
      responses:
        '200':
          description: User bank accounts summaries retrieved successully
          schema:
            allOf:
              - $ref: '#/definitions/ApiResponse'
              - type: object
                properties:
                  body:
                    type: array
                    items:
                      $ref: '#/definitions/BankAccountSummary'
        '400':
          description: Invalid Fields
          schema:
            $ref: '#/definitions/ApiResponse'
        '401':
          description: Authentication Error, thrown if invalid or no credentials was used for authentication
          schema:
            $ref: '#/definitions/ApiResponse'
        '500':
          description: Internal Server Error
          schema:
            $ref: '#/definitions/ApiResponse'
  /bank-accounts/{id}:
    get:
      security:
        - Bearer: []
      tags:
        - Bank Accounts Module
      summary: Get User bank account by ID
      description: Fetches logged in user's bank account data with transactions by given ID
      parameters:
        - in: path
          name: id
          description: Bank Account ID
          type: integer
          required: true
        - in: header
          name: Authorization
          type: string
          description: Attach Bearer JWT token
          required: true
      produces:
        - application/json
      responses:
        '200':
          description: User bank account data retrieved successully
          schema:
            allOf:
              - $ref: '#/definitions/ApiResponse'
              - type: object
                properties:
                  body:
                    $ref: '#/definitions/BankAccount'
        '400':
          description: Invalid Fields
          schema:
            $ref: '#/definitions/ApiResponse'
        '401':
          description: Authentication Error, thrown if invalid or no credentials was used for authentication
          schema:
            $ref: '#/definitions/ApiResponse'
        '403':
          description: Forbidden access Error, thrown if authenticated user doesn't have access to this resource
          schema:
            $ref: '#/definitions/ApiResponse'
        '404':
          description: Not found Error, thrown if the requested resource was not found
          schema:
            $ref: '#/definitions/ApiResponse'
        '500':
          description: Internal Server Error
          schema:
            $ref: '#/definitions/ApiResponse'
  /transactions/{transactionId}:
    get:
      security:
        - Bearer: []
      tags:
        - Transactions Module
      summary: Get transaction by ID
      description: Retrieves transaction data identified by the given ID
      parameters:
        - in: path
          name: transactionId
          description: Transaction ID
          type: integer
          required: true
        - in: header
          name: Authorization
          type: string
          description: Attach Bearer JWT token
          required: true
      produces:
        - application/json
      responses:
        '200':
          description: Transaction data updated successully
          schema:
            allOf:
              - $ref: '#/definitions/ApiResponse'
              - type: object
                properties:
                  body:
                    $ref: '#/definitions/Transaction'
        '401':
          description: Authentication Error, thrown if invalid or no credentials was used for authentication
          schema:
            $ref: '#/definitions/ApiResponse'
        '403':
          description: Forbidden access Error, thrown if authenticated user doesn't have access to this resource
          schema:
            $ref: '#/definitions/ApiResponse'
        '404':
          description: Not found Error, thrown if the requested resource was not found
          schema:
            $ref: '#/definitions/ApiResponse'
        '500':
          description: Internal Server Error
          schema:
            $ref: '#/definitions/ApiResponse'
    put:
      security:
        - Bearer: []
      tags:
        - Transactions Module
      summary: Update transaction
      description: Updates transaction data defined with given ID
      parameters:
        - in: path
          name: transactionId
          description: Transaction ID
          type: integer
          required: true
        - in: header
          name: Authorization
          type: string
          description: Attach Bearer JWT token
          required: true
        - in: body
          name: body
          description: Update user profile attributes
          required: true
          schema:
            $ref: '#/definitions/TransactionUpdateRequest'
      produces:
        - application/json
      responses:
        '200':
          description: Transaction data updated successully
          schema:
            allOf:
              - $ref: '#/definitions/ApiResponse'
              - type: object
                properties:
                  body:
                    $ref: '#/definitions/Transaction'
        '400':
          description: Invalid Fields
          schema:
            $ref: '#/definitions/ApiResponse'
        '401':
          description: Authentication Error, thrown if invalid or no credentials was used for authentication
          schema:
            $ref: '#/definitions/ApiResponse'
        '403':
          description: Forbidden access Error, thrown if authenticated user doesn't have access to this resource
          schema:
            $ref: '#/definitions/ApiResponse'
        '404':
          description: Not found Error, thrown if the requested resource was not found
          schema:
            $ref: '#/definitions/ApiResponse'
        '500':
          description: Internal Server Error
          schema:
            $ref: '#/definitions/ApiResponse'
  /bank-accounts/{id}/transactions/last-month:
    get:
      security:
        - Bearer: []
      tags:
        - Transactions Module
      summary: Get transactions registered in the last 30 days
      description: Retrieves transactions data of the bank account identified by the given ID registered in the last month
      parameters:
        - in: path
          name: id
          description: Bank account ID
          type: integer
          required: true
        - in: header
          name: Authorization
          type: string
          description: Attach Bearer JWT token
          required: true
      produces:
        - application/json
      responses:
        '200':
          description: Transaction data updated successully
          schema:
            allOf:
              - $ref: '#/definitions/ApiResponse'
              - type: object
                properties:
                  body:
                    type: array
                    items:
                      $ref: '#/definitions/Transaction'   
        '401':
          description: Authentication Error, thrown if invalid or no credentials was used for authentication
          schema:
            $ref: '#/definitions/ApiResponse'
        '403':
          description: Forbidden access Error, thrown if authenticated user doesn't have access to this resource
          schema:
            $ref: '#/definitions/ApiResponse'
        '404':
          description: Not found Error, thrown if the requested resource was not found
          schema:
            $ref: '#/definitions/ApiResponse'  
        '500':
          description: Internal Server Error
          schema:
            $ref: '#/definitions/ApiResponse'
  /enum-refs/transactions-types:
    get:
      security:
        - Bearer: []
      tags:
        - Enum References Module
      summary: Get transactions categories
      description: Fetches available transaction types
      parameters:
        - in: header
          name: Authorization
          type: string
          description: Attach Bearer JWT token
          required: true
      produces:
        - application/json
      responses:
        '200':
          description: User bank account data retrieved successully
          schema:
            allOf:
              - $ref: '#/definitions/ApiResponse'
              - type: object
                properties:
                  body:
                    type: array
                    items:
                      $ref: "#/definitions/TransactionPaymentType"
        '401':
          description: Authentication Error, thrown if invalid or no credentials was used for authentication
          schema:
            $ref: '#/definitions/ApiResponse'
        '500':
          description: Internal Server Error
          schema:
            $ref: '#/definitions/ApiResponse'
  /enum-refs/transactions-categories:
    get:
      security:
        - Bearer: []
      tags:
        - Enum References Module
      summary: Get transactions categories
      description: Fetches available transaction categories
      parameters:
        - in: header
          name: Authorization
          type: string
          description: Attach Bearer JWT token
          required: true
      produces:
        - application/json
      responses:
        '200':
          description: User bank account data retrieved successully
          schema:
            allOf:
              - $ref: '#/definitions/ApiResponse'
              - type: object
                properties:
                  body:
                    type: array
                    items:
                      $ref: "#/definitions/TransactionCategory"
        '401':
          description: Authentication Error, thrown if invalid or no credentials was used for authentication
          schema:
            $ref: '#/definitions/ApiResponse'
        '500':
          description: Internal Server Error
          schema:
            $ref: '#/definitions/ApiResponse'
securityDefinitions:
  Bearer:
    type: apiKey
    name: Authorization
    in: header
definitions:
  #
  # Requests bodies objects schema
  #
  SignupRequest:
    description: Request body for user signup endpoint
    properties:
      email:
        type: string
        description: user email
      password:
        type: string
        description: user password
      firstName:
        type: string
        description: user first name
      lastName:
        type: string
        description: user last name
  LoginRequest:
    description: Request body for user login endpoint
    properties:
      email:
        type: string
        description: user email
      password:
        type: string
        description: user password
      rememberMe:
        type: boolean
        description: true if user wants to stay logged in after current session end
  UserProfileUpdateRequest:
    description: Request body for user profile PUT endpoint
    type: object
    properties:
      firstName:
        type: string
      lastName:
        type: string
  TransactionUpdateRequest:
    type: object
    description: Transaction data to update for transaction update PUT endpoint
    properties:
      category:
        type: string
      userNotes:
        type: string
  
  #
  # Specific response objects schema
  #
  ApiResponse:
    description: Generic response for API endpoints
    type: object
    properties:
      status:
        type: integer
      message:
        type: string
  LoginResponse:
    description: Response body for user login endpoint
    type: object
    properties:
      token:
        type: string

  #
  # Data objects schema
  #
  Profile:
    description: Object representing profile data
    type: object
    properties:
      id:
        type: string
      email:
        type: string
  BankAccountSummary:
    description: Object representing bank account summarized data
    type: object
    properties:
      id:
        type: string
      name:
        type: string
      balanceAmount:
        type: integer
      balanceType:
        $ref: "#/definitions/AccountBalanceTypeEnum"
  BankAccount:
    description: Object representing bank account full data with transactions
    type: object
    properties:
      id:
        type: string
      name:
        type: string
      balanceAmount:
        type: integer
      balanceType:
        $ref: "#/definitions/AccountBalanceTypeEnum"
      transactions:
        type: array
        items:
          $ref: '#/definitions/Transaction'
  Transaction:
    type: object
    description: Transaction data for bank account requests endpoints
    properties:
      id:
        type: string
      description:
        type: string
      type:
        $ref: "#/definitions/TransactionPaymentTypeEnum"
      category:
        $ref: "#/definitions/TransactionCategoryEnum"
      userNotes:
        type: string
      date:
        type: string
      costAmount:
        type: integer
      balanceAmount:
        type: integer
  TransactionPaymentType:
    type: object
    description: Transaction type ID - label pairs
    properties:
      id:
        $ref: "#/definitions/TransactionPaymentTypeEnum"
      label:
        type: string
  TransactionCategory:
    type: object
    description: Transaction category ID - label pairs
    properties:
      id:
        $ref: "#/definitions/TransactionCategoryEnum"
      label:
        type: string

  #
  # Other types definitions
  #
  AccountBalanceTypeEnum:
    description: String enum definition for bank account type
    type: string
    enum:
      - AVAILABLE
      - CURRENT
  TransactionPaymentTypeEnum:
    description: String enum definition for transaction type (means of payment)
    type: string
    enum:
      - ELECTRONIC
  TransactionCategoryEnum:
    description: String enum definition for transaction categories
    type: string
    enum:
      - FOOD
      - SCHOOL_STUDIES
      - HEALTH
      - HOUSING
      - VEHICLE
      - HOBBIES
      - VACATIONS
      - PETS
      - TAXES
      - OTHER
    